package fr.umlv.tatoo.cc.lexer.ebnf.parser;

/** 
 *  This class is generated - please do not edit it 
 */
public enum NonTerminalEnum {
  start,
directives_lhs,
directives_lhs_optional_0,
imports_lhs,
imports_lhs_optional_1,
priorities_lhs,
priorities_lhs_optional_2,
token_lhs,
blank_lhs,
blank_lhs_optional_3,
comment_lhs,
comment_lhs_optional_4,
branch_lhs,
branch_lhs_optional_5,
error_lhs,
error_lhs_optional_6,
versions,
versions_optional_7,
types_lhs,
types_lhs_optional_8,
attributes,
attributes_optional_9,
start_non_terminals,
start_non_terminals_optional_10,
production_lhs,
directive,
directive_list,
lexem,
tokens_list,
decl,
decls,
blank_lexem,
blanks_list,
comment_lexem,
comments_list,
branch_lexem,
banches_list,
import_,
import_list,
priority,
priority_list,
version,
version_list,
parent_version,
parent_version_optional_11,
vartypedef,
vartypedef_list,
variable,
type,
attribute,
attribute_list,
regex,
alias,
alias_optional_12,
type_optional_13,
regex_terminal_decl,
regex_terminal_decl_optional_14,
terminal_or_prod_priority,
terminal_or_prod_priority_optional_15,
type_optional_16,
terminal_or_prod_priority_optional_17,
terminal_or_prod_priority_optional_18,
startid,
starts_list,
type_optional_19,
plus_optional_20,
prod,
prods,
var,
varlist,
terminal_or_prod_priority_optional_21,
production_id,
production_id_optional_22,
production_version,
production_version_optional_23,
vargroup,
qmark_optional_24,
qmark_optional_25,
separator,
separator_optional_26,
separator_optional_27,
separator_optional_28,
separator_optional_29
;
}